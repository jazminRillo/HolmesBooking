name: Deploy to Production and Develop

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          dotnet-version: '6.x'

      - name: Build the app
        run: dotnet build --configuration Release

      - name: Publish the app
        run: dotnet publish --no-restore --configuration Release --output ./publish

      - name: Install rsync
        run: sudo apt-get install rsync -y

      - name: Deploy to hosting service by FTP
        env:
          FTP_HOST: win5219.site4now.net
          FTP_USERNAME: jero0578
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          rsync -r --delete-after --verbose --exclude '.git/' ./publish/wwwroot/ $FTP_USERNAME@$FTP_HOST:/wwwroot/

  build-and-deploy-development:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          dotnet-version: '6.x'

      - name: Build the app
        run: dotnet build --configuration Release

      - name: Publish the app
        run: dotnet publish --no-restore --configuration Release --output ./publish

      - name: Install lftp
        run: sudo apt-get install lftp -y

      - name: Deploy to hosting service by FTP
        env:
          FTP_HOST: win5219.site4now.net
          FTP_USERNAME: developadmin
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          lftp -e "set ftp:ssl-allow no; open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST; mirror --reverse --only-newer --verbose ./publish/wwwroot/ /wwwroot/; bye"
