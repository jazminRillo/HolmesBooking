@model Reservation
@{
    ViewData["Title"] = "Editar Reserva";
    DateTime timeValue = Model.Time!.Value;
    string timeString = timeValue.ToString("yyyy-MM-ddTHH:mm:ss");
}

<h2>Editar Reserva</h2>

<form asp-action="SaveReservation" method="post">
    <div class="form-group">
        <label asp-for="Customer">Cliente</label>
        <select class="form-control" asp-for="Customer!.Id">
            @foreach (var option in Model.CustomerOptions!)
            {
                <option value="@option.Value" selected="@option.Selected">@option.Text</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label asp-for="Service">Servicio</label>
        <select class="form-control" asp-for="Service!.Id" id="Service_Id">
            @foreach (var option in Model.ServiceOptions!)
            {
                <option value="@option.Value" selected="@option.Selected">@option.Text</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label asp-for="Time">Fecha y Hora</label>
        <input class="form-control" asp-for="Time" id="Time" type="date" readonly />
    </div>

    <div class="form-group">
        <label>Horarios Disponibles</label>
        <select id="AvailableTimes" class="form-control" asp-for="TimeSelected" type="time"></select>
    </div>

    <div class="form-group">
        <label asp-for="NumberDiners">Cantidad de Personas</label>
        <input class="form-control" asp-for="NumberDiners" />
    </div>

    <div class="form-group">
        <label asp-for="Note">Nota</label>
        <textarea class="form-control" asp-for="Note"></textarea>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css" />

    <style>
        .custom-datepicker .ui-datepicker-week-end {
            display: none;
        }
    </style>

    <script>$(document).ready(function () {
            initializeDatePicker();
            $('#Service_Id').change(function () {
                var selectedServiceId = $(this).val();
                $.ajax({
                    url: '/services/get-service/' + selectedServiceId,
                    type: 'GET',
                    success: function (service) {
                        if (service && service.schedule) {
                            var schedule = service.schedule;
                            var daysOfWeek = Object.keys(schedule).map(Number);
                            $("#Time").datepicker("option", {
                                beforeShowDay: function (date) {
                                    var dayOfWeek = date.getDay();
                                    return [daysOfWeek.includes(dayOfWeek) && schedule[dayOfWeek].length > 0];
                                }
                            });
                        }
                    },
                    error: function () {
                        console.log('Error al obtener la información del servicio');
                    }
                });

                $("#Time").datepicker("setDate", null);
            });

            $("#Time").datepicker({
                dateFormat: "yy-mm-dd",
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                showOtherMonths: true,
                selectOtherMonths: true,
                beforeShowDay: $.datepicker.noWeekends,
                onSelect: function (dateText) {
                    var selectedServiceId = $('#Service_Id').val();
                    $.ajax({
                        url: '/services/get-service/' + selectedServiceId,
                        type: 'GET',
                        success: function (service) {
                            if (service && service.schedule) {
                                var schedule = service.schedule;
                                var selectedDayOfWeek = getCustomDayOfWeek(new Date(dateText));
                                var availableTimes = schedule[selectedDayOfWeek];
                                $("#AvailableTimes").empty();

                                availableTimes.forEach(function (time) {
                                    var option = $("<option>").text(time).val(time);
                                    $("#AvailableTimes").append(option);
                                });
                            }
                        },
                        error: function () {
                            console.log('Error al obtener la información del servicio');
                        }
                    });
                }
            }).addClass("custom-datepicker");
});
        function initializeDatePicker() {
            var timeValue = '@timeString';
            var selectedServiceId = $('#Service_Id').val();
            $.ajax({
                url: '/services/get-service/' + selectedServiceId,
                type: 'GET',
                success: function (service) {
                    if (service && service.schedule) {
                        var schedule = service.schedule;
                        var daysOfWeek = Object.keys(schedule).map(Number);
                        var selectedDayOfWeek = getCustomDayOfWeek(new Date(timeValue));
                        var availableTimes = schedule[selectedDayOfWeek];
                        $("#AvailableTimes").empty();
                        availableTimes.forEach(function (time) {
                            var option = $("<option>").text(time).val(time);

                            if (time === '@Model.TimeSelected') {
                                option.attr('selected', 'selected');
                            }

                            $("#AvailableTimes").append(option);
                        });
                        $("#Time").datepicker("option", {
                            beforeShowDay: function (date) {
                                var dayOfWeek = date.getDay();
                                return [daysOfWeek.includes(dayOfWeek) && schedule[dayOfWeek].length > 0];
                            }
                        });
                    }
                },
                error: function () {
                    console.log('Error al obtener la información del servicio');
                }
            });

            $("#Time").datepicker("setDate", null);
        }

        function getCustomDayOfWeek(date) {
            var dayOfWeek = date.getDay();
            if (dayOfWeek === 6) {
                return 0;
            }
            return dayOfWeek + 1;
        }
    </script>

}