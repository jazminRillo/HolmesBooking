@model Service

<h2 class="text-center">Editar Servicio</h2>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="UpdateService" method="post">

                <input type="hidden" asp-for="Id" />

                <div class="form-group">
                    <label asp-for="Name" class="form-label">Nombre del Servicio</label>
                    <input class="form-control" asp-for="Name" />
                </div>

                <div class="form-group">
                    <label asp-for="Description" class="form-label">Descripción</label>
                    <textarea id="Description" class="form-control" asp-for="Description"></textarea>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-6">
                            <label asp-for="StartDate" class="form-label">Fecha Inicio</label>
                            <input id="startDatePicker" class="form-control" asp-for="StartDate" type="date" />
                        </div>
                        <div class="col-md-6">
                            <label asp-for="EndDate" class="form-label">Fecha Fin</label>
                            <input id="endDatePicker" class="form-control" asp-for="EndDate" type="date" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="IsActive" class="form-label">Activo</label>
                    <input type="checkbox" class="form-check-input" asp-for="IsActive" />
                </div>

                <div class="form-group">
                    <label asp-for="MaxPeople" class="form-label">Cantidad máxima de reservas</label>
                    <input class="form-control" asp-for="MaxPeople" />
                </div>

                <div class="accordion accordion-flush" id="scheduleTimes">
                    <div class="accordion-item">
                        <h2 class="accordion-header bg-success" id="accordionId">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseId" aria-expanded="false" aria-controls="collapseId">
                                Programación de servicio
                            </button>
                        </h2>
                        <div id="collapseId" class="accordion-collapse collapse" aria-labelledby="accordionId" data-bs-parent="#scheduleTimes">
                            <div class="accordion-body">
                                @foreach (var day in Enum.GetValues(typeof(DayOfWeek)))
                                {
                                    var dayOfWeek = (DayOfWeek)day;
                                    var dayValue = (int)dayOfWeek;
                                    var scheduleDay = Model.Schedule.ContainsKey(dayValue) ? Model.Schedule[dayValue] : null;
                                    var isAvailable = scheduleDay != null && scheduleDay.Count > 0;
                                    <div class="form-group">
                                        <label>@GetDayName(dayOfWeek)</label>
                                        <div class="form-check">
                                            <input class="form-check-input schedule-checkbox" type="checkbox" id="check_@(dayOfWeek.ToString())" name="Schedule[@dayValue].IsAvailable"
                                                   value="true" @(isAvailable ? "checked" : "") />
                                            <label class="form-check-label" for="check_@(dayOfWeek.ToString())">Disponible</label>
                                        </div>
                                        <div class="form-group schedule-times" id="schedule_@(dayOfWeek.ToString())" style="@(isAvailable ? "display: block;" : "display: none;")">
                                            <div class="row">
                                                @foreach (var time in ScheduleTime.GetAvailableTimes())
                                                {
                                                    var isChecked = scheduleDay != null && scheduleDay.Contains(time);
                                                    <div class="col-2">
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="checkbox" id="time_@(dayOfWeek.ToString())_@(time.ToString("hhmm"))" name="Schedule[@dayValue][]"
                                                                   value="@time.ToString("hh\\:mm")" @(isChecked ? "checked" : "") />
                                                            <label class="form-check-label" for="time_@(dayOfWeek.ToString())_@(time.ToString("hhmm"))">@time.ToString("hh\\:mm")</label>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Guardar Cambios</button>
            </form>
        </div>
    </div>
</div>

@functions {
    public string GetDayName(System.DayOfWeek dayOfWeek)
    {
        switch (dayOfWeek)
        {
            case System.DayOfWeek.Monday:
                return "Lunes";
            case System.DayOfWeek.Tuesday:
                return "Martes";
            case System.DayOfWeek.Wednesday:
                return "Miércoles";
            case System.DayOfWeek.Thursday:
                return "Jueves";
            case System.DayOfWeek.Friday:
                return "Viernes";
            case System.DayOfWeek.Saturday:
                return "Sábado";
            case System.DayOfWeek.Sunday:
                return "Domingo";
            default:
                return string.Empty;
        }
    }
}



@section Scripts {
    <script src="https://cdn.tiny.cloud/1/bxg4yyrv6hylk2q29qlwb3cs99roqgq1awpravf4t1re5edw/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script>tinymce.init({
            selector: 'textarea#Description',
            height: 300,
            language: 'es',
            plugins: 'advlist autolink lists link image charmap print preview anchor image',
            toolbar: 'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | link image'
        });
        $(".schedule-checkbox").change(function () {
            var dayValue = $(this).attr("id").split("_")[1];
            var scheduleSection = $("#schedule_" + dayValue);
            if ($(this).prop("checked")) {
                scheduleSection.show();
            } else {
                scheduleSection.hide();
            }
        });

        $(".schedule-checkbox:checked").each(function () {
            $(this).closest(".form-group").find(".schedule-times").show();
        });


        var confirmationDialog;

        $("form").submit(function (event) {
            event.preventDefault();

            $(".schedule-checkbox").each(function () {
                var dayValue = $(this).attr("id").split("_")[1];
                if (!$(this).prop("checked")) {
                    $(this).parents(".form-group").append('<input type="hidden" name="DeletedDays[]" value="' + dayValue + '" />');
                }
            });

            confirmationDialog = document.createElement("div");
            confirmationDialog.classList.add("modal", "fade");
            confirmationDialog.tabIndex = "-1";
            confirmationDialog.role = "dialog";
            confirmationDialog.innerHTML =
                '<div class="modal-dialog" role="document">' +
                '<div class="modal-content">' +
                '<div class="modal-header">' +
                '<h5 class="modal-title">Confirmar</h5>' +
                '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
                '<span aria-hidden="true">&times;</span>' +
                '</button>' +
                '</div>' +
                '<div class="modal-body">' +
                '<p>¿Estás seguro de que deseas guardar los cambios?</p>' +
                '</div>' +
                '<div class="modal-footer">' +
                '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>' +
                '<button type="button" class="btn btn-primary" id="confirmSave">Guardar</button>' +
                '</div>' +
                '</div>' +
                '</div>';

            document.body.appendChild(confirmationDialog);

            $(confirmationDialog).modal('show');
        });

        // Manejar el evento de clic en el botón "Guardar" dentro del modal
        $(document).on("click", "#confirmSave", function () {
            $("form")[0].submit(); // Enviar el formulario
        });

        // Manejar el evento de clic en el botón "X" o "Cancelar" dentro del modal
        $(document).on("click", "[data-dismiss='modal']", function () {
            $(confirmationDialog).modal('hide');
            $(confirmationDialog).remove();
        });</script>
    <style>
        .form-label {
            font-weight: bold;
        }

        .schedule-section {
            border: 1px solid #ccc;
            padding: 10px;
            margin-top: 20px;
        }

        .schedule-times {
            margin-top: 10px;
        }

            .schedule-times .row {
                margin: 0;
            }

            .schedule-times .col-2 {
                padding: 0;
            }

        .bg-success .accordion-button {
            background-color: green;
            color: white;
        }
    </style>

}
